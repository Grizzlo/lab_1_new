package com.serj.thevirusgame.app;

// Клас, що відповідає за окрему клітинку поля
public class Cell {

    /* Параметр, що містить значення, відповідне до вмісту данної клітинки
       0 пуста клітинка
       1, 2 "жива" та "нежива" червона клітинка
       -1, -2 "жива" та "нежива" синя клітинка
       100 клітинка із перепоною
    Загалом, тестовий варіант зберігання стану клітинки, вважаю його частково не оптимальним,
    краще зробити клас "Гравець", і в клітинці вже буде міститися інформація, за яку зараз відповідає
    стани 1,2,-1,-2
    */
    private int condition;

    /* Параметр, що використовується алгортмом перевірки можливості ходу (клас GameLogic, метод checkMove())
    Вважаю, що варто змінити алгоритм checkMove(), щоб він не працював подібним чином, так як це дуже рагульно
    */
    private boolean wasChecked;

    // Конструктор, що за замовчуванням визначає клітинку як пусту, не перевірену
    public Cell(){
        condition = 0;
        wasChecked = false;
    }

    // Метод, що дозволяє змінити значення вмісту клітинки, на приклад записати хід гравця
    public void setCondition(int value){
        condition = value;
    }

    // Метод, що дозволяє отримати значенн вмісту клітинки
    public int getCondition(){
        return condition;
    }

    // Метод, що дозволяє позначити клітинку як перевірену при використанні алгоритму checkMove()
    public void setWasChecked(boolean value){
        wasChecked = value;
    }

    // Метод, що дозволяє отримати значення стану клітинки при використанні алгоритму checkMove()
    public boolean getWasChecked(){
        return wasChecked;
    }

}
